targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
resistancesFound
mutationsProtein[[1]] <- list("Q148H","T97A", "E138A")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
resistancesFound
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
resistancesFound
mutationsProtein[[1]] <- list("Q148H","T97A", "E138A")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
source("~/scriptsR/mutationsFunctions.R")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
mutationsProtein[[1]] <- list("Q148H","T97A", "E138A")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
source("~/scriptsR/mutationsFunctions.R")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
targetReadableMutations
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
getReadableMutation("2(Q148H/K/R,N155H)")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
time <- executionTime()
scrap("https://hivfrenchresistance.org/hiv-french-resitance-tables-of-rules/")
source("~/scriptsR/functionsScrapping.R")
time <- executionTime()
scrap("https://hivfrenchresistance.org/hiv-french-resitance-tables-of-rules/")
print(executionTime(time))
Sys.Date()
Sys.time()
conn <- dbConnect(dbConnect(SQLite(), "~/scriptsR/DatabaseHivResistance"))
str(conn)
dbListTables(con)
dbListTables(conn)
class(conn)
list.files("~/scriptsR/DatabaseHivResistance")
file.exists("~/scriptsR/DatabaseHivResistance")
file.info("~/scriptsR/DatabaseHivResistance")
file.info("~/scriptsR/DatabaseHivResistance")$ctime
Sys.time()
?difftime()
file.info("~/scriptsR/DatabaseHivResistanc")$ctime
runApp('scriptsR/Application_Graphics')
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
mutationsProtein[[1]] <- list("Q148H","T97A", "E138A")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
resistancesFound
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
resistancesFound
source("~/scriptsR/mutationsFunctions.R")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
source("~/scriptsR/mutationsFunctions.R")
source("~/scriptsR/mutationsFunctions.R")
resistancesFound
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
source("~/scriptsR/mutationsFunctions.R")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
source("~/scriptsR/mutationsFunctions.R")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
getReadableMutation("2(Q148H/K/R,2(L74I,T97A,E138A/K/T,G140A/C/S))")
source("~/scriptsR/mutationsFunctions.R")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
targetReadableMutations
targetReadableMutations <- removeUnecessaryLists(readableMutations, mutationsProtein[[2]])
targetReadableMutations <- removeUnecessaryLists(readableMutations, "strand")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
readableMutations <- list()
mutations <- donneesMutation
for(i in 1:nrow(mutations)){
mutationList <- getReadableMutation(mutations[i,3])
readableMutations[[i]] <- list(mutationList, mutations[i,2], mutations[i,5])
}
targetReadableMutations <- removeUnecessaryLists(readableMutations, "strand")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
readableMutations
targetReadableMutations
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
source("~/scriptsR/mutationsFunctions.R")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
source("~/scriptsR/mutationsFunctions.R")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
source("~/scriptsR/mutationsFunctions.R")
for(j in 1:length(targetReadableMutations)){
depthSearch <- depthSearchMutation(
targetReadableMutations[[j]][[1]],
mutationsProtein[[1]])
# Si des mutation correspondantes sont trouvées, elles sont ajoutées
if(!is.null(depthSearch) && !isEmpty(depthSearch)){
depthSearch <- paste0(lapply(depthSearch, unlist, use.names=FALSE),collapse = ",")
resistancesFound[nrow(resistancesFound)+1, ] <- list(i, depthSearch,
targetReadableMutations[[j]][[2]],
targetReadableMutations[[j]][[3]])
}
}
resistancesFound
source("~/scriptsR/argparseScript.R")
source("~/scriptsR/argparseScript.R")
file.info(~/scriptsR/DatabaseHivResistance)
file.info("~/scriptsR/DatabaseHivResistance")
file.info("~/scriptsR/DatabaseHivResistance")$ctime
Sys. date()
Sys.date()
Sys.Date()
difftime(Sys.Date()-file.info("~/scriptsR/DatabaseHivResistance")$ctime)
difftime(Sys.Date(),file.info("~/scriptsR/DatabaseHivResistance")$ctime)
difftime(Sys.Date(),file.info("~/scriptsR/DatabaseHivResistance")$ctime, units = "days")
difftime(Sys.Date(),file.info("~/scriptsR/DatabaseHivResistance")$atime, units = "days")
difftime(Sys.Date(),file.info("~/scriptsR/DatabaseHivResistance")$atime, units = "days")
difftime(Sys.Date(),file.info("~/scriptsR/DatabaseHivResistance")$atime, units = "days")
difftime(Sys.Time(),file.info("~/scriptsR/DatabaseHivResistance")$atime, units = "days")
difftime(Sys.time(),file.info("~/scriptsR/DatabaseHivResistance")$atime, units = "days")
source("~/scriptsR/mutationsFunctions.R")
runApp('scriptsR/Application_Graphics')
runApp('scriptsR/Application_Graphics')
hiv1 <- read.fasta("../data/genomeHIV.fna")
suppressMessages(library(stringr))
suppressMessages(library(tidyr))
suppressMessages(library(Biostrings))
suppressMessages(library(dplyr))
suppressMessages(library(RSQLite))
suppressMessages(library(seqinr))
suppressMessages(library(readxl))
suppressMessages(library(read.gb))
suppressMessages(library(readr))
suppressMessages(library(rmarkdown))
suppressMessages(library(utils))
hiv1 <- read.fasta("../data/genomeHIV.fna")
setwd(dir = "./Hiv_mutations_analyser/scripts/")
hiv1 <- read.fasta("../data/genomeHIV.fna")
hiv2 <- read.fasta("../data/genomeHIV2.fna")
hiv1 <- paste(hiv1$AF033819.3, collapse = "")
hiv2 <- paste(hiv2$M30502.1, collapse = "")
matrixSub <- substitutionMatrixBuilder(3,1,-3)
align <- pairwiseAlignment(pattern = toupper(hiv2), subject = toupper(hiv1), substitutionMatrix= matrixSub, type="global", gapOpening=-3, gapExtension=-1)
hiv1 <- str_split_1(as.character(subject(align)), "")
hiv2 <- str_split_1(as.character(pattern(align)), "")
i <- 0
j <- 0
k <- 0
capsid <- list()
integrase <- list()
transcriptase <- list()
protease <- list()
for(elem in hiv1){
i <- i+1
if(elem == "-") j <- j+1
# if(hiv2[i] == "-") j <- j-1
if(i-j <= 732 && i-j <= 1424){
if(!(hiv2[i] == "-"|| elem == "-")) capsid[[length(capsid)+1]] <- hiv2[i]
}
else if(i-j >= 1799 && i-j <= 2095){
if(!(hiv2[i] == "-"|| elem == "-")) protease[[length(protease)+1]] <- hiv2[i]
}
else if(i-j <= 2096 && i-j <= 3775){
if(!(hiv2[i] == "-"|| elem == "-")) transcriptase[[length(transcriptase)+1]] <- hiv2[i]
}
else if(i-j <= 3776 && i-j <= 4639){
if(!(hiv2[i] == "-"|| elem == "-")) integrase[[length(integrase)+1]] <- hiv2[i]
}
}
hiv1 <- read.fasta("../data/genomeHIV.fna")
hiv2 <- read.fasta("../data/genomeHIV2.fna")
hiv1 <- paste(hiv1$AF033819.3, collapse = "")
hiv2 <- paste(hiv2$M30502.1, collapse = "")
matrixSub <- substitutionMatrixBuilder(3,1,-3)
align <- pairwiseAlignment(pattern = toupper(hiv2), subject = toupper(hiv1), substitutionMatrix= matrixSub, type="global", gapOpening=-3, gapExtension=-1)
hiv1 <- str_split_1(as.character(subject(align)), "")
hiv2 <- str_split_1(as.character(pattern(align)), "")
i <- 0
j <- 0
k <- 0
capsid <- list()
integrase <- list()
transcriptase <- list()
protease <- list()
for(elem in hiv1){
i <- i+1
if(!elem == "-") j <- j+1
# if(hiv2[i] == "-") j <- j-1
if(j <= 732 && i-j <= 1424){
if(!(hiv2[i] == "-"|| elem == "-")) capsid[[length(capsid)+1]] <- hiv2[i]
}
else if(j >= 1799 && i-j <= 2095){
if(!(hiv2[i] == "-"|| elem == "-")) protease[[length(protease)+1]] <- hiv2[i]
}
else if(j <= 2096 && i-j <= 3775){
if(!(hiv2[i] == "-"|| elem == "-")) transcriptase[[length(transcriptase)+1]] <- hiv2[i]
}
else if(j <= 3776 && i-j <= 4639){
if(!(hiv2[i] == "-"|| elem == "-")) integrase[[length(integrase)+1]] <- hiv2[i]
}
}
hiv1 <- read.fasta("../data/genomeHIV.fna")
hiv2 <- read.fasta("../data/genomeHIV2.fna")
hiv1 <- paste(hiv1$AF033819.3, collapse = "")
hiv2 <- paste(hiv2$M30502.1, collapse = "")
matrixSub <- substitutionMatrixBuilder(3,1,-3)
align <- pairwiseAlignment(pattern = toupper(hiv2), subject = toupper(hiv1), substitutionMatrix= matrixSub, type="global", gapOpening=-3, gapExtension=-1)
hiv1 <- str_split_1(as.character(subject(align)), "")
hiv2 <- str_split_1(as.character(pattern(align)), "")
i <- 0
j <- 0
k <- 0
capsid <- list()
integrase <- list()
transcriptase <- list()
protease <- list()
for(elem in hiv1){
i <- i+1
if(!elem == "-") j <- j+1
# if(hiv2[i] == "-") j <- j-1
if(j <= 732 && j <= 1424){
if(!(hiv2[i] == "-"|| elem == "-")) capsid[[length(capsid)+1]] <- hiv2[i]
}
else if(j >= 1799 && j <= 2095){
if(!(hiv2[i] == "-"|| elem == "-")) protease[[length(protease)+1]] <- hiv2[i]
}
else if(j <= 2096 && j <= 3775){
if(!(hiv2[i] == "-"|| elem == "-")) transcriptase[[length(transcriptase)+1]] <- hiv2[i]
}
else if(j <= 3776 && j <= 4639){
if(!(hiv2[i] == "-"|| elem == "-")) integrase[[length(integrase)+1]] <- hiv2[i]
}
}
ifelse
capsid
translateDna(paste0(capsid, collapse=""))
paste0(translateDna(paste0(capsid, collapse="")), collapse="")
hiv2
paste0(hiv2, collapse = "")
read.fasta("../data/genomeHIV2.fna")
read.fasta("../data/genomeHIV2.fna", as.string = T)
paste0(capsid, collapse ="")
paste0(integrase, collapse ="")
paste0(integrase, collapse ="")
hiv1 <- read.fasta("../data/genomeHIV.fna")
hiv2 <- read.fasta("../data/genomeHIV2.fna")
hiv1 <- paste(hiv1$AF033819.3, collapse = "")
hiv2 <- paste(hiv2$M30502.1, collapse = "")
matrixSub <- substitutionMatrixBuilder(3,1,-3)
align <- pairwiseAlignment(pattern = toupper(hiv2), subject = toupper(hiv1), substitutionMatrix= matrixSub, type="global", gapOpening=-3, gapExtension=-1)
hiv1 <- str_split_1(as.character(subject(align)), "")
hiv2 <- str_split_1(as.character(pattern(align)), "")
i <- 0
j <- 0
k <- 0
capsid <- list()
integrase <- list()
transcriptase <- list()
protease <- list()
for(elem in hiv1){
i <- i+1
if(!elem == "-") j <- j+1
# if(hiv2[i] == "-") j <- j-1
if(j <= 732 && j <= 1424){
if(!(hiv2[i] == "-")) capsid[[length(capsid)+1]] <- hiv2[i]
}
else if(j >= 1799 && j <= 2095){
if(!(hiv2[i] == "-")) protease[[length(protease)+1]] <- hiv2[i]
}
else if(j <= 2096 && j <= 3775){
if(!(hiv2[i] == "-")) transcriptase[[length(transcriptase)+1]] <- hiv2[i]
}
else if(j <= 3776 && j <= 4639){
if(!(hiv2[i] == "-")) integrase[[length(integrase)+1]] <- hiv2[i]
}
}
paste0(integrase, collapse = "")
paste0(transcriptase, collapse = "")
j
i
paste0(protease, collapse = "")
paste0(capsid, collapse ="")
paste0(protease, collapse = "")
paste0(transcriptase, collapse = "")
paste0(integrase, collapse = "")
protease[1]
source("~/Hiv_mutations_analyser/scripts/mutationsFunctions.R")
geneGagPol
elem
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
